
Array.prototype.append=function(b){for(var a in arguments){if(arguments.hasOwnProperty(a)){this[this.length]=arguments[a]}}return this};Array.prototype.prepend=function(a){return this};Array.prototype.trimRight=function(a){a=a||1;if(isNaN(a)){throw new TypeError("Parameter 1 ["+a+"] should be a Number")}this.length-=a>this.length?this.length:a;return this};Array.prototype.trimLeft=function(c){c=c||1;if(isNaN(c)){throw new TypeError("Parameter 1 ["+c+"] should be a Number")}for(var b=0,a=this.length-c;b<a;++b){this[b]=this[b+c]}this.trimRight(c);return this};Array.prototype.head=function(c){c=c||1;if(isNaN(c)){throw new TypeError("Parameter 1 ["+c+"] should be a Number")}var b=[];for(var a=0;a<c;++a){if(this[a]!==undefined){b.append(this[a])}}return b};Array.prototype.tail=function(d){d=d||1;if(isNaN(d)){throw new TypeError("Parameter 1 ["+d+"] should be a Number")}var c=[];for(var b=this.length-d,a=this.length;b<a;++b){if(this[b]!==undefined){c.append(this[b])}}return c};Array.prototype.merge=function(b){var c=this;for(var d in arguments){if(arguments.hasOwnProperty(d)){var a=arguments[d];if(a.isArray()){a.each(function(f,e){if(isNaN(e)){c[e]=f}else{c.append(f)}})}else{this.append(a)}}}return this};Array.prototype.keys=function(b){var a=[];this.each(function(d,c){if(!b||b&&!isNaN(c)){a.append(c)}});return a};Array.prototype.values=function(a){var b=[];this.each(function(d,c){if(!a||a&&!isNaN(c)){b.append(d)}});return b};Array.prototype.intersect=function(b){if(!b.isArray()){throw new TypeError("Parameter 1 is not an Array")}var a=[];this.each(function(d,c){b.each(function(e){if(d===e){a[c]=d}})});return a};Array.prototype.intersectKeys=function(b){if(!b.isArray()){throw new TypeError("Parameter 1 is not an Array")}var a=[];this.keys().each(function(c){if(b[c]!==undefined){a[c]=this[c]}});return a};Array.prototype.each=function(b){for(var a in this){if(this.hasOwnProperty(a)){b.call(this,this[a],(isNaN(+a)?a:+a))}}return this};Array.prototype.contains=function(c,a){var b=0;this.each(function(d){if(c instanceof RegExp&&c.test(d)||c===d||!a&&c==d){++b}});return b};Array.prototype.containsKey=function(b){var a=0;this.keys().each(function(c){if(b instanceof RegExp&&b.test(c)||b===c){++a}});return a};Array.prototype.filter=function(b){var a=[];this.each(function(d,c){if((b instanceof RegExp)&&b.test(d)||(b instanceof Function)&&b.call(this,d)){a[c]=d}});return a};Array.prototype.filterKeys=function(c){var b=[],a=this;this.keys().filter(c).each(function(d){if((c instanceof RegExp)&&c.test(d)||(c instanceof Function)&&c.call(this,d)){b[d]=a[d]}});return b};Array.prototype.shuffle=function(){var c=this.values(1);for(var b=0,a=c.length;b<a;++b){this[b]=c.splice(Math.random()*c.length<<0,1)[0]}return this};Array.prototype.implode=function(a){a=a||", ";var b="";this.each(function(c){b+=a+c});b=b.substr(a.toString().length);return b};Array.prototype.toString=function(){return"["+this.implode()+"]"};Array.prototype.size=function(){return this.values().length};Array.prototype.equals=function(a){if(!a.isArray()||a.size()!=this.size()){return false}var b=this,c=true;a.each(function(e,d){c&=(b[d]!=undefined&&b[d].equals(e))});return(c==true)};if(!Object.prototype.equals){Object.prototype.equals=function(a){return this==a}}Object.prototype.isArray=function(){return this instanceof Array};